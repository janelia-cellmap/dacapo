dacapo.experiments.tasks.one_hot_task_config
============================================

.. py:module:: dacapo.experiments.tasks.one_hot_task_config


Classes
-------

.. autoapisummary::

   dacapo.experiments.tasks.one_hot_task_config.OneHotTask
   dacapo.experiments.tasks.one_hot_task_config.TaskConfig
   dacapo.experiments.tasks.one_hot_task_config.OneHotTaskConfig


Module Contents
---------------

.. py:class:: OneHotTask(task_config)



   A task that uses a one-hot predictor. The model is loaded from a file
   and the weights are loaded from a file. The loss is a dummy loss and the
   post processor is an argmax post processor. The evaluator is a dummy evaluator.

   .. attribute:: weights

      The path to the weights file.

      :type: Path

   .. method:: create_model(self, architecture) -> Model

      This method creates a model using the given architecture.

   .. rubric:: Notes

   This is a base class for all tasks that use one-hot predictors.


.. py:class:: TaskConfig

   Base class for task configurations. Each subclass of a `Task` should
   have a corresponding config class derived from `TaskConfig`.

   .. attribute:: name

      A unique name for this task. This will be saved so you and
      others can find and reuse this task. Keep it short and avoid
      special characters.

   .. method:: verify(self) -> Tuple[bool, str]

      This method verifies the TaskConfig object.

   .. rubric:: Notes

   This is a base class for all task configurations. It is not meant to be
   used directly.


   .. py:attribute:: name
      :type:  str


   .. py:method:: verify() -> Tuple[bool, str]

      Check whether this is a valid Task

      :returns:

                A tuple containing a boolean value indicating whether the TaskConfig object is valid
                    and a string containing the reason why the object is invalid.
      :rtype: Tuple[bool, str]

      :raises NotImplementedError: This method is not implemented.

      .. rubric:: Examples

      >>> valid, reason = task_config.verify()



.. py:class:: OneHotTaskConfig



   Class that derives from the TaskConfig to perform one hot prediction tasks.

   .. attribute:: task_type

      the type of task, in this case, OneHotTask.

   .. attribute:: classes

      a List of classes which starts from id 0.

   .. method:: None

      
      

   .. note:: The class of each voxel is simply the argmax over the vector of output probabilities.


   .. py:attribute:: task_type


   .. py:attribute:: classes
      :type:  List[str]


