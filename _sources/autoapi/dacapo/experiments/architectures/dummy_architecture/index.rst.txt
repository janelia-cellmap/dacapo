dacapo.experiments.architectures.dummy_architecture
===================================================

.. py:module:: dacapo.experiments.architectures.dummy_architecture


Classes
-------

.. autoapisummary::

   dacapo.experiments.architectures.dummy_architecture.DummyArchitecture


Module Contents
---------------

.. py:class:: DummyArchitecture(architecture_config)



   A class used to represent a dummy architecture layer for a 3D CNN.

   .. attribute:: channels_in

      An integer representing the number of input channels.

   .. attribute:: channels_out

      An integer representing the number of output channels.

   .. attribute:: conv

      A 3D convolution object.

   .. attribute:: input_shape

      A coordinate object representing the shape of the input.

   .. method:: forward(x)

      Performs the forward pass of the network.

   .. method:: num_in_channels()

      Returns the number of input channels for this architecture.

   .. method:: num_out_channels()

      Returns the number of output channels for this architecture.

   .. note:: This class is used to represent a dummy architecture layer for a 3D CNN.


   .. py:attribute:: channels_in


   .. py:attribute:: channels_out


   .. py:attribute:: conv


   .. py:property:: input_shape

      Returns the input shape for this architecture.

      :returns: Input shape of the architecture.
      :rtype: Coordinate

      :raises NotImplementedError: This method is not implemented in this class.

      .. rubric:: Examples

      >>> dummy_architecture.input_shape
      Coordinate(x=40, y=20, z=20)

      .. note:: This method is used to return the input shape for this architecture.


   .. py:property:: num_in_channels

      Returns the number of input channels for this architecture.

      :returns: Number of input channels.
      :rtype: int

      :raises NotImplementedError: This method is not implemented in this class.

      .. rubric:: Examples

      >>> dummy_architecture.num_in_channels
      1

      .. note:: This method is used to return the number of input channels for this architecture.


   .. py:property:: num_out_channels

      Returns the number of output channels for this architecture.

      :returns: Number of output channels.
      :rtype: int

      :raises NotImplementedError: This method is not implemented in this class.

      .. rubric:: Examples

      >>> dummy_architecture.num_out_channels
      1

      .. note:: This method is used to return the number of output channels for this architecture.


   .. py:method:: forward(x)

      Perform the forward pass of the network.

      :param x: Input tensor.

      :returns: Output tensor after the forward pass.
      :rtype: Tensor

      :raises NotImplementedError: This method is not implemented in this class.

      .. rubric:: Examples

      >>> dummy_architecture = DummyArchitecture(architecture_config)
      >>> x = torch.randn(1, 1, 40, 20, 20)
      >>> dummy_architecture.forward(x)

      .. note:: This method is used to perform the forward pass of the network.



