dacapo.experiments.trainers.trainer_config
==========================================

.. py:module:: dacapo.experiments.trainers.trainer_config


Classes
-------

.. autoapisummary::

   dacapo.experiments.trainers.trainer_config.TrainerConfig


Module Contents
---------------

.. py:class:: TrainerConfig

   A class to represent the Trainer Configurations.

   It is the base class for trainer configurations. Each subclass of a `Trainer`
   should have a specific config class derived from `TrainerConfig`.

   .. attribute:: name

      A unique name for this trainer.

      :type: str

   .. attribute:: batch_size

      The batch size to be used during training.

      :type: int

   .. attribute:: learning_rate

      The learning rate of the optimizer.

      :type: float

   .. method:: verify() -> Tuple[bool, str]

      
      Verify whether this TrainerConfig is valid or not.

   .. note:: The TrainerConfig class is an abstract class that cannot be instantiated directly. It is meant to be subclassed.


   .. py:attribute:: name
      :type:  str


   .. py:attribute:: batch_size
      :type:  int


   .. py:attribute:: learning_rate
      :type:  float


   .. py:method:: verify() -> Tuple[bool, str]

      Verify whether this TrainerConfig is valid or not.
      A TrainerConfig is considered valid if it has a valid batch size and learning rate.

      :returns: A tuple containing a boolean indicating whether the
                TrainerConfig is valid and a message explaining why.
      :rtype: tuple

      :raises NotImplementedError: If the method is not implemented by the subclass.

      .. rubric:: Examples

      >>> valid, message = trainer_config.verify()
      >>> valid
      True
      >>> message
      "No validation for this Trainer"

      .. note:: This method must be implemented by the subclass.



