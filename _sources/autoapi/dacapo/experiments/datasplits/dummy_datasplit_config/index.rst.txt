dacapo.experiments.datasplits.dummy_datasplit_config
====================================================

.. py:module:: dacapo.experiments.datasplits.dummy_datasplit_config


Classes
-------

.. autoapisummary::

   dacapo.experiments.datasplits.dummy_datasplit_config.DummyDataSplit
   dacapo.experiments.datasplits.dummy_datasplit_config.DataSplitConfig
   dacapo.experiments.datasplits.dummy_datasplit_config.DatasetConfig
   dacapo.experiments.datasplits.dummy_datasplit_config.DummyDatasetConfig
   dacapo.experiments.datasplits.dummy_datasplit_config.DummyDataSplitConfig


Module Contents
---------------

.. py:class:: DummyDataSplit(datasplit_config)



   A class for creating a simple train dataset and no validation dataset. It is derived from `DataSplit` class.
   It is used to split the data into training and validation datasets. The training and validation datasets are
   used to train and validate the model respectively.

   .. attribute:: train

      list
      The list containing training datasets. In this class, it contains only one dataset for training.

   .. attribute:: validate

      list
      The list containing validation datasets. In this class, it is an empty list as no validation dataset is set.

   .. method:: __init__(self, datasplit_config)

      
      The constructor for DummyDataSplit class. It initialises a list with training datasets according to the input configuration.

   .. rubric:: Notes

   This class is used to split the data into training and validation datasets.


   .. py:attribute:: train
      :type:  List[dacapo.experiments.datasplits.datasets.Dataset]


   .. py:attribute:: validate
      :type:  List[dacapo.experiments.datasplits.datasets.Dataset]


.. py:class:: DataSplitConfig

   A class used to create a DataSplit configuration object.

   .. attribute:: name

      str
      A name for the datasplit. This name will be saved so it can be found
      and reused easily. It is recommended to keep it short and avoid special
      characters.

   .. method:: verify() -> Tuple[bool, str]

      
      Validates if it is a valid data split configuration.

   .. rubric:: Notes

   This class is used to create a DataSplit configuration object.


   .. py:attribute:: name
      :type:  str


   .. py:method:: verify() -> Tuple[bool, str]

      Validates if the current configuration is a valid data split configuration.

      :returns:

                Tuple[bool, str]
                    True if the configuration is valid,
                    False otherwise along with respective validation error message.

      :raises NotImplementedError: If the method is not implemented in the derived class.

      .. rubric:: Examples

      >>> datasplit_config = DataSplitConfig(name="datasplit")
      >>> datasplit_config.verify()
      (True, "No validation for this DataSplit")

      .. rubric:: Notes

      This method is used to validate the configuration of DataSplit.



.. py:class:: DatasetConfig

   A class used to define configuration for datasets. This provides the
   framework to create a Dataset instance.

   .. attribute:: name

      str (eg: "sample_dataset").
      A unique identifier to name the dataset.
      It aids in easy identification and reusability of this dataset.
      Advised to keep it short and refrain from using special characters.

   .. attribute:: weight

      int (default=1).
      A numeric value that indicates how frequently this dataset should be
      sampled in comparison to others. Higher the weight, more frequently it
      gets sampled.

   .. method:: verify

      
      Checks and validates the dataset configuration. The specific rules for
      validation need to be defined by the user.

   .. rubric:: Notes

   This class is used to create a configuration object for datasets.


   .. py:attribute:: name
      :type:  str


   .. py:attribute:: weight
      :type:  int


   .. py:method:: verify() -> Tuple[bool, str]

      Method to verify the dataset configuration.

      Since there is no specific validation logic defined for this DataSet, this
      method will always return True as default reaction and a message stating
      the lack of validation.

      :returns: A tuple of boolean value indicating the check (True or False) and
                message specifying result of validation.
      :rtype: tuple

      :raises NotImplementedError: If the method is not implemented in the derived class.

      .. rubric:: Examples

      >>> dataset_config = DatasetConfig(name="sample_dataset")
      >>> dataset_config.verify()
      (True, "No validation for this DataSet")

      .. rubric:: Notes

      This method is used to validate the configuration of the dataset.



.. py:class:: DummyDatasetConfig



   A dummy configuration class for test datasets.

   .. attribute:: dataset_type

      Clearly mentions the type of dataset

   .. attribute:: raw_config

      This attribute holds the configurations related to dataset arrays.

   .. method:: verify

      A dummy verification method for testing purposes, always returns False and a message.

   .. rubric:: Notes

   This class is used to create a configuration object for the dummy dataset.


   .. py:attribute:: dataset_type


   .. py:attribute:: raw_config
      :type:  dacapo.experiments.datasplits.datasets.arrays.ArrayConfig


   .. py:method:: verify() -> Tuple[bool, str]

      A dummy method that always indicates the dataset config is not valid.

      :returns: A tuple of False and a message indicating the invalidity.

      :raises NotImplementedError: If the method is not implemented in the derived class.

      .. rubric:: Examples

      >>> dataset_config = DummyDatasetConfig(raw_config=DummyArrayConfig(name="dummy_array"))
      >>> dataset_config.verify()
      (False, "This is a DummyDatasetConfig and is never valid")

      .. rubric:: Notes

      This method is used to validate the configuration of the dataset.



.. py:class:: DummyDataSplitConfig



   A simple class representing config for Dummy DataSplit.

   This class is derived from 'DataSplitConfig' and is initialized with
   'DatasetConfig' for training dataset.

   .. attribute:: datasplit_type

      Class of dummy data split functionality.

   .. attribute:: train_config

      Config for the training dataset. Defaults to DummyDatasetConfig.

   .. method:: verify()

      
      A method for verification. This method always return 'False' plus
      a string indicating the condition.

   .. rubric:: Notes

   This class is used to represent the configuration for Dummy DataSplit.


   .. py:attribute:: datasplit_type


   .. py:attribute:: train_config
      :type:  dacapo.experiments.datasplits.datasets.DatasetConfig


   .. py:method:: verify() -> Tuple[bool, str]

      A method for verification. This method always return 'False' plus
      a string indicating the condition.

      :returns: A tuple contains a boolean 'False' and a string.
      :rtype: Tuple[bool, str]

      .. rubric:: Examples

      >>> dummy_datasplit_config = DummyDataSplitConfig(train_config)
      >>> dummy_datasplit_config.verify()
      (False, "This is a DummyDataSplit and is never valid")

      .. rubric:: Notes

      This method is used to verify the configuration of DummyDataSplit.



