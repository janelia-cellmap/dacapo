dacapo.experiments.datasplits.keys.keys
=======================================

.. py:module:: dacapo.experiments.datasplits.keys.keys


Classes
-------

.. autoapisummary::

   dacapo.experiments.datasplits.keys.keys.DataKey
   dacapo.experiments.datasplits.keys.keys.ArrayKey
   dacapo.experiments.datasplits.keys.keys.GraphKey


Module Contents
---------------

.. py:class:: DataKey



   Represent a base class for various types of keys in Dacapo library.

   .. attribute:: RAW

      str
      The raw data key.

   .. attribute:: GT

      str
      The ground truth data key.

   .. attribute:: MASK

      str
      The data mask key.

   .. attribute:: NON_EMPTY

      str
      The data key for non-empty mask.

   .. attribute:: SPECIFIED_LOCATIONS

      str
      The key for specified locations in the graph.

   .. method:: __str__()

      
      Return the string representation of the key.

   .. rubric:: Notes

   This class is a base class and should not be instantiated.


.. py:class:: ArrayKey



   A unique enumeration representing different types of array keys

   .. attribute:: RAW

      str
      The raw data key.

   .. attribute:: GT

      str
      The ground truth data key.

   .. attribute:: MASK

      str
      The data mask key.

   .. attribute:: NON_EMPTY

      str
      The data key for non-empty mask.

   .. method:: __str__()

      
      Return the string representation of the key.

   .. rubric:: Notes

   This class is a base class and should not be instantiated.


   .. py:attribute:: RAW
      :value: 'raw'



   .. py:attribute:: GT
      :value: 'gt'



   .. py:attribute:: MASK
      :value: 'mask'



   .. py:attribute:: NON_EMPTY
      :value: 'non_empty_mask'



.. py:class:: GraphKey



   A unique enumeration representing different types of graph keys

   .. attribute:: SPECIFIED_LOCATIONS

      str
      The key for specified locations in the graph.

   .. method:: __str__()

      
      Return the string representation of the key.

   .. rubric:: Notes

   This class is a base class and should not be instantiated.


   .. py:attribute:: SPECIFIED_LOCATIONS
      :value: 'specified_locations'



