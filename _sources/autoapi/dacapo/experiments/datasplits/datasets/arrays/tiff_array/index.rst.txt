dacapo.experiments.datasplits.datasets.arrays.tiff_array
========================================================

.. py:module:: dacapo.experiments.datasplits.datasets.arrays.tiff_array


Attributes
----------

.. autoapisummary::

   dacapo.experiments.datasplits.datasets.arrays.tiff_array.logger


Classes
-------

.. autoapisummary::

   dacapo.experiments.datasplits.datasets.arrays.tiff_array.TiffArray


Module Contents
---------------

.. py:data:: logger

.. py:class:: TiffArray(array_config)



   This class provides the necessary configuration for a tiff array.

   .. attribute:: _offset

      Coordinate
      The offset of the array.

   .. attribute:: _file_name

      Path
      The file name of the tiff.

   .. attribute:: _voxel_size

      Coordinate
      The voxel size of the array.

   .. attribute:: _axes

      List[str]
      The axes of the array.

   .. method:: attrs() -> Dict

      
      Return the attributes of the tiff.

   .. note:: This class is a subclass of Array.


   .. py:property:: attrs
      :abstractmethod:


      Return the attributes of the tiff.

      :returns: The attributes of the tiff.
      :rtype: Dict

      :raises NotImplementedError: Tiffs have tons of different locations for metadata.

      .. rubric:: Examples

      >>> tiff_array.attrs
      {'axes': ['x', 'y', 'z'], 'offset': [0, 0, 0], 'voxel_size': [1, 1, 1]}

      .. note:: Tiffs have tons of different locations for metadata.


   .. py:property:: axes
      :type: List[str]


      Return the axes of the array.

      :returns: The axes of the array.
      :rtype: List[str]

      :raises NotImplementedError: Tiffs have tons of different locations for metadata.

      .. rubric:: Examples

      >>> tiff_array.axes
      ['x', 'y', 'z']

      .. note:: Tiffs have tons of different locations for metadata.


   .. py:property:: dims
      :type: int


      Return the number of dimensions of the array.

      :returns: The number of dimensions of the array.
      :rtype: int

      :raises NotImplementedError: Tiffs have tons of different locations for metadata.

      .. rubric:: Examples

      >>> tiff_array.dims
      3

      .. note:: Tiffs have tons of different locations for metadata.


   .. py:method:: shape() -> funlib.geometry.Coordinate

      Return the shape of the array.

      :returns: The shape of the array.
      :rtype: Coordinate

      :raises NotImplementedError: Tiffs have tons of different locations for metadata.

      .. rubric:: Examples

      >>> tiff_array.shape
      Coordinate([100, 100, 100])

      .. note:: Tiffs have tons of different locations for metadata.



   .. py:method:: voxel_size() -> funlib.geometry.Coordinate

      Return the voxel size of the array.

      :returns: The voxel size of the array.
      :rtype: Coordinate

      :raises NotImplementedError: Tiffs have tons of different locations for metadata.

      .. rubric:: Examples

      >>> tiff_array.voxel_size
      Coordinate([1, 1, 1])

      .. note:: Tiffs have tons of different locations for metadata.



   .. py:method:: roi() -> funlib.geometry.Roi

      Return the region of interest of the array.

      :returns: The region of interest of the array.
      :rtype: Roi

      :raises NotImplementedError: Tiffs have tons of different locations for metadata.

      .. rubric:: Examples

      >>> tiff_array.roi
      Roi([0, 0, 0], [100, 100, 100])

      .. note:: Tiffs have tons of different locations for metadata.



   .. py:property:: writable
      :type: bool


      Return whether the array is writable.

      :returns: Whether the array is writable.
      :rtype: bool

      :raises NotImplementedError: Tiffs have tons of different locations for metadata.

      .. rubric:: Examples

      >>> tiff_array.writable
      False

      .. note:: Tiffs have tons of different locations for metadata.


   .. py:property:: dtype

      Return the data type of the array.

      :returns: The data type of the array.
      :rtype: np.dtype

      :raises NotImplementedError: Tiffs have tons of different locations for metadata.

      .. rubric:: Examples

      >>> tiff_array.dtype
      np.float32

      .. note:: Tiffs have tons of different locations for metadata.


   .. py:property:: num_channels
      :type: Optional[int]


      Return the number of channels of the array.

      :returns: The number of channels of the array.
      :rtype: Optional[int]

      :raises NotImplementedError: Tiffs have tons of different locations for metadata.

      .. rubric:: Examples

      >>> tiff_array.num_channels
      1

      .. note:: Tiffs have tons of different locations for metadata.


   .. py:property:: spatial_axes
      :type: List[str]


      Return the spatial axes of the array.

      :returns: The spatial axes of the array.
      :rtype: List[str]

      :raises NotImplementedError: Tiffs have tons of different locations for metadata.

      .. rubric:: Examples

      >>> tiff_array.spatial_axes
      ['x', 'y', 'z']

      .. note:: Tiffs have tons of different locations for metadata.


   .. py:method:: data()

      Return the data of the tiff.

      :returns: The data of the tiff.
      :rtype: np.ndarray

      :raises NotImplementedError: Tiffs have tons of different locations for metadata.

      .. rubric:: Examples

      >>> tiff_array.data
      np.ndarray

      .. note:: Tiffs have tons of different locations for metadata.



